
quarkus.datasource.jdbc.telemetry=true
# Prod
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=todo
%prod.quarkus.datasource.password=todoPassword
%prod.quarkus.datasource.jdbc.url=jdbc:otel:postgresql://todo-db/todo
#%prod.quarkus.datasource.jdbc.url=jdbc:tracing:postgresql://todo-db/todo
# %prod.quarkus.datasource.jdbc.max-size=10
# %prod.quarkus.datasource.jdbc.min-size=5
# %prod.quarkus.datasource.jdbc.initial-size=5
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.log.console.color=false
%prod.quarkus.hibernate-orm.database.generation=none
# Dev
%dev.quarkus.datasource.db-kind=postgresql
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
#General
#quarkus.test.native-image-profile=it
#quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.datasource.db-kind=postgresql
quarkus.package.type=fast-jar
quarkus.hibernate-orm.log.sql=true
quarkus.log.console.enable=true
#quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.color=true
quarkus.swagger-ui.always-include=false
quarkus.smallrye-openapi.path=/openapi
quarkus.datasource.metrics.enabled=true
#  Log
quarkus.http.access-log.enabled=true
#quarkus.http.access-log.pattern=%h %l %u %t "%r" %s %b "%{i,Referer}" "%{i,User-Agent}" "traceId=%{X,traceId}" "parentId=%X{parentId}" "spanId=%X{spanId}" "sampled=%X{sampled}"
quarkus.http.access-log.pattern==%h %l %u %t "%r" %s %b "%{i,Referer}" "%{i,User-Agent}" traceId=%{X,traceId} spanId=%{X,spanId}
#quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n 
quarkus.log.console.format=%d{HH:mm:ss} [%c{2.}] (%t) %s%e%n 

#OpenTelemetry
quarkus.application.name=todo 
quarkus.otel.enabled=true
#quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my_secret 
quarkus.otel.propagators=b3
%dev.quarkus.otel.exporter.otlp.endpoint=http://localhost:4317
#quarkus.otel.tracer.resource-attributes=app=${quarkus.application.name}

#Alternative to the console log
#quarkus.http.access-log.pattern="...traceId=%{X,traceId} spanId=%{X,spanId}"
# Banner
quarkus.banner.path=banner.txt
quarkus.banner.enabled=true