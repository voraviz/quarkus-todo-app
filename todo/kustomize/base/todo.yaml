apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"todo-db"}]'
    app.openshift.io/vcs-ref: "otel"
    app.openshift.io/vcs-uri: https://github.com/voraviz/quarkus-todo-app
  labels:
    app: todo
    app.kubernetes.io/component: todo
    app.kubernetes.io/instance: todo
    app.kubernetes.io/name: java
    app.kubernetes.io/part-of: todo-app
    app.openshift.io/runtime: quarkus
    app.openshift.io/runtime-version: "2.16.1.Final"
  name: todo
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: todo
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: todo
        version: v1
        maistra.io/expose-route: 'true'
      annotations:
        sidecar.istio.io/inject: "false"
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"Deployment","name":"todo-db"}]'
    spec:
      containers:
      - name: todo
        image: quay.io/voravitl/todo:otel-native
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: "0.05"
            memory: 40Mi
          limits:
            cpu: "0.1"
            memory: 200Mi
        env:
        - name: quarkus.http.access-log.enabled
          value: "true"  
        - name: quarkus.log.level
          value: INFO
        - name: quarkus.hibernate-orm.database.generation
          value: none
        - name: quarkus.http.cors
          value: "true"
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 300  
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 600
        securityContext:
          seccompProfile: #"RuntimeDefault" or "Localhost"
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          readOnlyRootFilesystem: false            
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60   
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
